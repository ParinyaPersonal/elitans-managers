<div class="grid gap-3 p-3">
    <p class="text-zinc-700">You can choose the project you wish to proceed with by selecting from the list below. The project you select will be used in the next steps of the process. Be sure to choose the correct project to ensure the process proceeds accurately.</p>
    <label for="name"><a class="text-red-500 me-2">*</a>Select Project</label>
    <div class="grid md:grid-cols-2 gap-3">
        <div class="w-full flex-wrap gap-2 border-x border-t md:border border-zinc-300 bg-zinc-50" id="project-list">
            <div class="w-full" id="project-null">
                <input type="radio" name="option" id="null" value="" class="peer hidden" checked />
                <label for="null" class="block cursor-pointer select-none peer-checked:bg-zinc-200 px-3 py-1 text-zinc-400 border-b border-zinc-300">(No Project)</label>
            </div>
        </div>
        <div>
            <div class="grid grid-cols-2 gap-3">
                <button class="w-full bg-zinc-50 hover:bg-zinc-200 border border-zinc-300 focus:outline-none focus:ring-2 focus:ring-yellow-300 text-sm px-5 py-2.5 text-center transition duration-200 cursor-pointer disabled:cursor-not-allowed disabled:opacity-50" id="copy" is="run">Copy Location</button>
                <button class="w-full bg-zinc-50 hover:bg-zinc-200 border border-zinc-300 focus:outline-none focus:ring-2 focus:ring-yellow-300 text-sm px-5 py-2.5 text-center transition duration-200 cursor-pointer disabled:cursor-not-allowed disabled:opacity-50" id="open" is="run">Open VSCode</button>
                <button class="w-full bg-zinc-50 hover:bg-zinc-200 border border-zinc-300 focus:outline-none focus:ring-2 focus:ring-yellow-300 text-sm px-5 py-2.5 text-center transition duration-200 cursor-pointer disabled:cursor-not-allowed disabled:opacity-50" id="zip" is="run">Zip Project</button>
                <button class="w-full bg-zinc-50 hover:bg-zinc-200 border border-zinc-300 focus:outline-none focus:ring-2 focus:ring-yellow-300 text-sm px-5 py-2.5 text-center transition duration-200 cursor-pointer disabled:cursor-not-allowed disabled:opacity-50" id="mcpack" is="run">McPack Project</button>
                <button class="w-full bg-zinc-50 hover:bg-zinc-200 border border-zinc-300 focus:outline-none focus:ring-2 focus:ring-yellow-300 text-sm px-5 py-2.5 text-center transition duration-200 cursor-pointer disabled:cursor-not-allowed disabled:opacity-50" id="encode" is="run">Encode Project</button>
                <button class="w-full bg-zinc-50 hover:bg-zinc-200 border border-zinc-300 focus:outline-none focus:ring-2 focus:ring-yellow-300 text-sm px-5 py-2.5 text-center transition duration-200 cursor-pointer disabled:cursor-not-allowed disabled:opacity-50" id="decode" is="run">Decode Project</button>
                <button class="col-span-2 w-full bg-zinc-50 hover:bg-zinc-200 border border-zinc-300 focus:outline-none focus:ring-2 focus:ring-yellow-300 text-sm px-5 py-2.5 text-center transition duration-200 cursor-pointer disabled:cursor-not-allowed disabled:opacity-50" id="delete" is="run">Delete Project</button>
            </div>
        </div>
    </div>
</div>
<script>
    $(document).ready(async function() {
        $('[is="run"]').prop("disabled", true)

        await $.ajax({
            url: '/folder',
            type: 'POST',
            "headers": {
                "Content-Type": "application/json"
            },
            "data": JSON.stringify({
                "base": localStorage.getItem("base"),
                "dir": "development_resource_packs"
            }),
            success: function(data) {
                data.forEach((v, i) => {
                    $('#project-list').append(`<div class="w-full" id="project-${v}"></div>`)
                    $(`#project-${v}`).append(`<input type="radio" name="option" id="${v}" value="${v}" class="peer hidden" />`)
                    $(`#project-${v}`).append(`<label for="${v}" class="block cursor-pointer select-none peer-checked:bg-zinc-200 px-3 py-1 border-b border-zinc-300">${v}</label>`)
                })
            }
        });

        $("[name='option']").on("change", function() {
            const project = $(this).val()
            if (project == "") {
                $('[is="run"]').prop("disabled", true)
                $('#view-icon').attr('src', "https://www.lavalamp.com/wp-content/uploads/2016/07/placeholder-1-1.png")
            } else {
                $('[is="run"]').prop("disabled", false)
                $.ajax({
                    url: '/icon',
                    type: 'POST',
                    "headers": {
                        "Content-Type": "application/json"
                    },
                    "data": JSON.stringify({
                        "base": localStorage.getItem("base"),
                        "dir": "development_resource_packs",
                        "folder": project
                    }),
                    xhrFields: {
                        responseType: "blob"
                    },
                    success: function(data) {
                        const blob = new Blob([data], {
                            type: 'image/png'
                        });
                        $('#view-icon').attr("src", URL.createObjectURL(blob))
                    }
                })
            }
        })

        $("#copy").on("click", function() {
            if ($("[name='option']:checked:checked").val() == "")
                return;
            navigator.clipboard.writeText(`${localStorage.getItem("base")}/development_resource_packs/${$("[name='option']:checked").val()}`)
            Swal.fire({
                icon: "success",
                title: "Success",
                text: "Copy Success",
                showConfirmButton: false,
                timer: 3000,
                timerProgressBar: true
            })
            return false;
        })

        $("#open").on("click", function() {
            if ($("[name='option']:checked").val() == "")
                return;
            window.open(`vscode://file/${localStorage.getItem("base")}/development_resource_packs/${$("[name='option']:checked").val()}`)
            return false;
        })

        function compile(type) {
            $.ajax({
                "url": "/compile",
                "method": "POST",
                "headers": {
                    "Content-Type": "application/json"
                },
                "data": JSON.stringify({
                    "type": type,
                    "base": localStorage.getItem("base"),
                    "dir": "development_resource_packs",
                    "folder": $("[name='option']:checked").val()
                }),
                success: function(data) {
                    Swal.fire({
                        icon: "success",
                        title: "Success",
                        text: "Compile Success",
                        showConfirmButton: false,
                        timer: 3000,
                        timerProgressBar: true
                    })
                }
            })
        }

        $("#zip").on("click", function() {
            if ($("[name='option']:checked").val() == "")
                return;
            compile("zip")
            return false;
        })

        $("#mcpack").on("click", function() {
            if ($("[name='option']:checked").val() == "")
                return;
            compile("mcpack")
            return false;
        })

        $("#encode").on("click", function() {
            if ($("[name='option']:checked").val() == "")
                return;
            $.ajax({
                "url": "/resource/encode",
                "method": "POST",
                "headers": {
                    "Content-Type": "application/json"
                },
                "data": JSON.stringify({
                    "base": localStorage.getItem("base"),
                    "folder": $("[name='option']:checked").val()
                }),
                success: function(data) {
                    Swal.fire({
                        icon: "success",
                        title: "Success",
                        text: "Encode Success",
                        showConfirmButton: false,
                        timer: 3000,
                        timerProgressBar: true
                    })
                },
                error: function(data) {
                    Swal.fire({
                        icon: "error",
                        title: "Error",
                        text: `Encode Failed: ${data.responseText}`,
                        showConfirmButton: false,
                        timer: 3000,
                        timerProgressBar: true
                    })
                }
            })
            return false;
        })

        $("#decode").on("click", function() {
            if ($("[name='option']:checked").val() == "")
                return;
            $.ajax({
                "url": "/resource/decode",
                "method": "POST",
                "headers": {
                    "Content-Type": "application/json"
                },
                "data": JSON.stringify({
                    "base": localStorage.getItem("base"),
                    "folder": $("[name='option']:checked").val(),
                    "api": localStorage.getItem("api")
                }),
                success: function(data) {
                    Swal.fire({
                        icon: "success",
                        title: "Success",
                        text: "Decode Success",
                        showConfirmButton: false,
                        timer: 3000,
                        timerProgressBar: true
                    })
                },
                error: function(data) {
                    Swal.fire({
                        icon: "error",
                        title: "Error",
                        text: `Decode Failed: ${data.responseText}`,
                        showConfirmButton: false,
                        timer: 3000,
                        timerProgressBar: true
                    })
                }
            })
            return false;
        })

        $("#delete").on("click", async function() {
            if ($("[name='option']:checked").val() == "")
                return;
            const {
                isConfirmed
            } = await Swal.fire({
                title: 'Are you sure?',
                text: "You won't be able to revert this!",
                icon: 'question',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, delete it!'
            })
            if (isConfirmed) {
                $.ajax({
                    "url": "/delete",
                    "method": "POST",
                    "headers": {
                        "Content-Type": "application/json"
                    },
                    "data": JSON.stringify({
                        "base": localStorage.getItem("base"),
                        "dir": "development_resource_packs",
                        "folder": $("[name='option']:checked").val()
                    }),
                    success: async function(data) {
                        await Swal.fire({
                            icon: "success",
                            title: "Success",
                            text: "Delete Success",
                            showConfirmButton: false,
                            timer: 3000,
                            timerProgressBar: true
                        })
                        location.reload()
                    }
                })
            }
        })
    })
</script>